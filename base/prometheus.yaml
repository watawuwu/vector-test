# from https://github.com/kubernetes/kubernetes/edit/master/cluster/addons/prometheus/prometheus-statefulset.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kube-system
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: kube-system
spec:
  serviceName: prometheus
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      initContainers:
      - name: init-chown-data
        image: busybox:latest
        command: ["chown", "-R", "65534:65534", "/data"]
        volumeMounts:
        - name: data
          mountPath: /data
          subPath: ""
      containers:
      - name: prometheus-server-configmap-reload
        image: jimmidyson/configmap-reload:v0.1
        args:
        - --volume-dir=/etc/config
        - --webhook-url=http://localhost:9090/-/reload
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      - name: prometheus-server
        image: prom/prometheus:v2.2.1
        args:
          - --config.file=/etc/config/prometheus.yaml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - name: config
          mountPath: /etc/config
        - name: data
          mountPath: /data
          subPath: ""
      volumes:
      - name: config
        configMap:
          name: prometheus
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: hostpath
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: kube-system
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: http
    port: 9090
    protocol: TCP
    # targetPort:: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
  - name: metrics
    port: 9100
    protocol: TCP
    # targetPort: 9100
  selector:
    app: node-exporter
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
      - image: prom/node-exporter:v0.18.1
        name: node-exporter
        args:
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        volumeMounts:
        - mountPath: /host/proc
          name: proc-volume
          readOnly: true
        - mountPath: /host/sys
          name: sys-volume
          readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
      - name: proc-volume
        hostPath:
          path: /proc
      - name: sys-volume
        hostPath:
          path: /sys
